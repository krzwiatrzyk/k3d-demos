version: 3

includes:
  cluster: 
    taskfile: ../../lib-cluster-manager/.taskfiles/k3d.yaml
  argocd: 
    taskfile: ../../lib-cluster-manager/k8s-apps/argocd/Taskfile.yaml
    dir: ../../lib-cluster-manager/k8s-apps/argocd
    
vars:
  CLUSTER_NAME: 
    sh: basename "$PWD"

tasks:
  configure:
    - task: argocd:install:helm
    - task: argocd:install:ingress-route
    - task: argoapps:install

  argoapps:install:
  - helm upgrade --install argo-apps argo-apps -n argocd
 
  create:
    cmds:
    - task: cluster:create
      vars:
        CLUSTER_NAME: '{{ .CLUSTER_NAME }}'
    - task: configure 


  delete:
    cmds:
    - task: cluster:delete
      vars:
        CLUSTER_NAME: '{{ .CLUSTER_NAME }}'

  start:
    cmds:
    - task: cluster:start
      vars:
        CLUSTER_NAME: '{{ .CLUSTER_NAME }}'

  stop:
    cmds:
    - task: cluster:stop
      vars:
        CLUSTER_NAME: '{{ .CLUSTER_NAME }}'

  argocd:reposerver:debug:
    vars:
      ARGO_POD:
        sh: kubectl get pods -n argocd -o name | grep repo-server
    cmds:
    - echo {{ .ARGO_POD }}
    - kubectl debug -n argocd -it {{ .ARGO_POD }} --image=busybox:1.28 --target={{ .ARGO_POD }}

  argocd:reposerver:copy-curl:
    vars:
      ARGO_POD:
        sh: kubectl get pods -n argocd -o name | grep repo-server | cut -f 2 -d "/"
    cmds:
    - wget https://github.com/moparisthebest/static-curl/releases/latest/download/curl-amd64
    - kubectl -n argocd cp curl-amd64 {{ .ARGO_POD }}:/tmp/curl 
    - rm curl-amd64

  robusta:install:generator:
  - pip install -U robusta-cli --no-cache

  robusta:generate:
  - robusta gen-config